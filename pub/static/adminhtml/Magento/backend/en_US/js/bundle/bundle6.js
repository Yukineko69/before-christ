require.config({"config": {
        "jsbuild":{"modernizr/modernizr.js":"/*!\n * Modernizr v2.6.1\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.6.1',\n\n        Modernizr = {},\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n        enableClasses = true,\n    /*>>cssclasses*/\n\n        docElement = document.documentElement,\n\n        /**\n         * Create our \"modernizr\" element that we do most feature tests on.\n         */\n            mod = 'modernizr',\n        modElem = document.createElement(mod),\n        mStyle = modElem.style,\n\n        /**\n         * Create the input element for various Web Forms feature tests.\n         */\n            inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n\n    /*>>smile*/\n        smile = ':)',\n    /*>>smile*/\n\n        toString = {}.toString,\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n        prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n        omPrefixes = 'Webkit Moz O ms',\n\n        cssomPrefixes = omPrefixes.split(' '),\n\n        domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n        ns = {'svg': 'http://www.w3.org/2000/svg'},\n    /*>>ns*/\n\n        tests = {},\n        inputs = {},\n        attrs = {},\n\n        classes = [],\n\n        slice = classes.slice,\n\n        featureName, // used in testing loop\n\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n        injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n\n            var style, ret, node,\n                div = document.createElement('div'),\n            // After page load injecting a fake body doesn't work so check if body exists\n                body = document.body,\n            // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n                fakeBody = body ? body : document.createElement('body');\n\n            if ( parseInt(nodes, 10) ) {\n                // In order not to give false positives we create a node for each test\n                // This also allows the method to scale for unspecified uses\n                while ( nodes-- ) {\n                    node = document.createElement('div');\n                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n                    div.appendChild(node);\n                }\n            }\n\n            // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n            // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n            // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n            // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n            // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n            style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n            div.id = mod;\n            // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n            // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n            (body ? div : fakeBody).innerHTML += style;\n            fakeBody.appendChild(div);\n            if ( !body ) {\n                //avoid crashing IE8, if background image is used\n                fakeBody.style.background = \"\";\n                docElement.appendChild(fakeBody);\n            }\n\n            ret = callback(div, rule);\n            // If this is done after page load we don't want to remove the body so check if body exists\n            !body ? fakeBody.parentNode.removeChild(fakeBody) : div.parentNode.removeChild(div);\n\n            return !!ret;\n\n        },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n        testMediaQuery = function( mq ) {\n\n            var matchMedia = window.matchMedia || window.msMatchMedia;\n            if ( matchMedia ) {\n                return matchMedia(mq).matches;\n            }\n\n            var bool;\n\n            injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\n                bool = (window.getComputedStyle ?\n                    getComputedStyle(node, null) :\n                    node.currentStyle)['position'] == 'absolute';\n            });\n\n            return bool;\n\n        },\n    /*>>mq*/\n\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrect:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n        isEventSupported = (function() {\n\n            var TAGNAMES = {\n                'select': 'input', 'change': 'input',\n                'submit': 'form', 'reset': 'form',\n                'error': 'img', 'load': 'img', 'abort': 'img'\n            };\n\n            function isEventSupported( eventName, element ) {\n\n                element = element || document.createElement(TAGNAMES[eventName] || 'div');\n                eventName = 'on' + eventName;\n\n                // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n                var isSupported = eventName in element;\n\n                if ( !isSupported ) {\n                    // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n                    if ( !element.setAttribute ) {\n                        element = document.createElement('div');\n                    }\n                    if ( element.setAttribute && element.removeAttribute ) {\n                        element.setAttribute(eventName, '');\n                        isSupported = is(element[eventName], 'function');\n\n                        // If property was created, \"remove it\" (by setting value to `undefined`)\n                        if ( !is(element[eventName], 'undefined') ) {\n                            element[eventName] = undefined;\n                        }\n                        element.removeAttribute(eventName);\n                    }\n                }\n\n                element = null;\n                return isSupported;\n            }\n            return isEventSupported;\n        })(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n        _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n        hasOwnProp = function (object, property) {\n            return _hasOwnProperty.call(object, property);\n        };\n    }\n    else {\n        hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n            return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n        };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function bind(that) {\n\n            var target = this;\n\n            if (typeof target != \"function\") {\n                throw new TypeError();\n            }\n\n            var args = slice.call(arguments, 1),\n                bound = function () {\n\n                    if (this instanceof bound) {\n\n                        var F = function(){};\n                        F.prototype = target.prototype;\n                        var self = new F();\n\n                        var result = target.apply(\n                            self,\n                            args.concat(slice.call(arguments))\n                        );\n                        if (Object(result) === result) {\n                            return result;\n                        }\n                        return self;\n\n                    } else {\n\n                        return target.apply(\n                            that,\n                            args.concat(slice.call(arguments))\n                        );\n\n                    }\n\n                };\n\n            return bound;\n        };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')){\n                    // default to autobind unless override\n                    return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n            return testProps(props, prefixed);\n\n            // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n            props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n            return testDOMProps(props, prefixed, elem);\n        }\n    }\n    /*>>testallprops*/\n\n\n    /**\n     * Tests\n     * -----\n     */\n\n        // The *new* flexbox\n        // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function() {\n        return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function() {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function() {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function() {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function() {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function() {\n        var bool;\n\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n            bool = true;\n        } else {\n            injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n                bool = node.offsetTop === 9;\n            });\n        }\n\n        return bool;\n    };\n\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function() {\n        return 'geolocation' in navigator;\n    };\n\n\n    tests['postmessage'] = function() {\n        return !!window.postMessage;\n    };\n\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function() {\n        return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function() {\n        return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function() {\n        return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function() {\n        return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function() {\n        var div = document.createElement('div');\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function() {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function() {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function() {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function() {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n    };\n\n\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function() {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function() {\n        return testPropsAll('borderImage');\n    };\n\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function() {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function() {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function() {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n\n    tests['opacity'] = function() {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/).test(mStyle.opacity);\n    };\n\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   daneden.me/2011/12/putting-up-with-androids-bullshit/\n    tests['cssanimations'] = function() {\n        return testPropsAll('animationName');\n    };\n\n\n    tests['csscolumns'] = function() {\n        return testPropsAll('columnCount');\n    };\n\n\n    tests['cssgradients'] = function() {\n        /**\n         * For CSS Gradients syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n            // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n            (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n                // standard syntax             // trailing 'background-image:'\n                prefixes.join(str3 + str1)).slice(0, -str1.length)\n        );\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n\n    tests['cssreflections'] = function() {\n        return testPropsAll('boxReflect');\n    };\n\n\n    tests['csstransforms'] = function() {\n        return !!testPropsAll('transform');\n    };\n\n\n    tests['csstransforms3d'] = function() {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if ( ret && 'webkitPerspective' in docElement.style ) {\n\n            // Webkit allows this media query to succeed only if the feature is enabled.\n            // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n            injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n                ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n            });\n        }\n        return ret;\n    };\n\n\n    tests['csstransitions'] = function() {\n        return testPropsAll('transition');\n    };\n\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function() {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n            var style = document.getElementById('smodernizr'),\n                sheet = style.sheet || style.styleSheet,\n                cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n\n            bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function() {\n        var bool;\n\n        injectElementWithStyles(['#modernizr:after{content:\"',smile,'\";visibility:hidden}'].join(''), function( node ) {\n            bool = node.offsetHeight >= 1;\n        });\n\n        return bool;\n    };\n\n\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function() {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n            }\n\n        } catch(e) { }\n\n        return bool;\n    };\n\n    tests['audio'] = function() {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                    elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n            }\n        } catch(e) { }\n\n        return bool;\n    };\n\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function() {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function() {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n\n    tests['webworkers'] = function() {\n        return !!window.Worker;\n    };\n\n\n    tests['applicationcache'] = function() {\n        return !!window.applicationCache;\n    };\n\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function() {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function() {\n        var div = document.createElement('div');\n        div.innerHTML = '<svg/>';\n        return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function() {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function() {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = (function( props ) {\n            for ( var i = 0, len = props.length; i < len; i++ ) {\n                attrs[ props[i] ] = !!(props[i] in inputElem);\n            }\n            if (attrs.list){\n                // safari false positive's on datalist: webk.it/74252\n                // see also github.com/Modernizr/Modernizr/issues/146\n                attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = (function(props) {\n\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if ( bool ) {\n\n                    inputElem.value         = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n                        docElement.appendChild(inputElem);\n                        defaultView = document.defaultView;\n\n                        // Safari 2-4 allows the smiley as a value, despite making a slider\n                        bool =  defaultView.getComputedStyle &&\n                            defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                            // Mobile android web browser has false positive, so must\n                            // check the height to see if the widget is actually there.\n                            (inputElem.offsetHeight !== 0);\n\n                        docElement.removeChild(inputElem);\n\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\n                        // Spec doesn't define any special parsing or detectable UI\n                        //   behaviors so we pass these through as true\n\n                        // Interestingly, opera fails the earlier test, so it doesn't\n                        //  even make it here.\n\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\n                        // Real url and email support comes with prebaked validation.\n                        bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n                    } else {\n                        // If the upgraded input component rejects the :) text, we got a winner\n                        bool = inputElem.value != smile;\n                    }\n                }\n\n                inputs[ props[i] ] = !!bool;\n            }\n            return inputs;\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n\n    // End of test definitions\n    // -----------------------\n\n\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n    Modernizr.addTest = function ( feature, test ) {\n        if ( typeof feature == 'object' ) {\n            for ( var key in feature ) {\n                if ( hasOwnProp( feature, key ) ) {\n                    Modernizr.addTest( key, feature[ key ] );\n                }\n            }\n        } else {\n\n            feature = feature.toLowerCase();\n\n            if ( Modernizr[feature] !== undefined ) {\n                // we're going to quit if you're trying to overwrite an existing test\n                // if we were to allow it, we'd do this:\n                //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n                //   docElement.className = docElement.className.replace( re, '' );\n                // but, no rly, stuff 'em.\n                return Modernizr;\n            }\n\n            test = typeof test == 'function' ? test() : test;\n\n            if (enableClasses) {\n                docElement.className += ' ' + (test ? '' : 'no-') + feature;\n            }\n            Modernizr[feature] = test;\n\n        }\n\n        return Modernizr; // allow chaining.\n    };\n\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /*! HTML5 Shiv v3.6 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed */\n    ;(function(window, document) {\n        /*jshint evil:true */\n        /** Preset options */\n        var options = window.html5 || {};\n\n        /** Used to skip problem elements */\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n        /** Not all elements can be cloned in IE (this list can be shortend) **/\n        var saveClones = /^<|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i;\n\n        /** Detect whether the browser supports default html5 styles */\n        var supportsHtml5Styles;\n\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\n        var expando = '_html5shiv';\n\n        /** The id for the documents expando */\n        var expanID = 0;\n\n        /** Cached data for each document */\n        var expandoData = {};\n\n        /** Detect whether the browser supports unknown elements */\n        var supportsUnknownElements;\n\n        (function() {\n            try {\n                var a = document.createElement('a');\n                a.innerHTML = '<xyz></xyz>';\n                //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n                supportsHtml5Styles = ('hidden' in a);\n\n                supportsUnknownElements = a.childNodes.length == 1 || (function() {\n                    // assign a false positive if unable to shiv\n                    (document.createElement)('a');\n                    var frag = document.createDocumentFragment();\n                    return (\n                        typeof frag.cloneNode == 'undefined' ||\n                            typeof frag.createDocumentFragment == 'undefined' ||\n                            typeof frag.createElement == 'undefined'\n                        );\n                }());\n            } catch(e) {\n                supportsHtml5Styles = true;\n                supportsUnknownElements = true;\n            }\n\n        }());\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Creates a style sheet with the given CSS text and adds it to the document.\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @param {String} cssText The CSS text.\n         * @returns {StyleSheet} The style element.\n         */\n        function addStyleSheet(ownerDocument, cssText) {\n            var p = ownerDocument.createElement('p'),\n                parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n            p.innerHTML = 'x<style>' + cssText + '</style>';\n            return parent.insertBefore(p.lastChild, parent.firstChild);\n        }\n\n        /**\n         * Returns the value of `html5.elements` as an array.\n         * @private\n         * @returns {Array} An array of shived element node names.\n         */\n        function getElements() {\n            var elements = html5.elements;\n            return typeof elements == 'string' ? elements.split(' ') : elements;\n        }\n\n        /**\n         * Returns the data associated to the given document\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @returns {Object} An object of data.\n         */\n        function getExpandoData(ownerDocument) {\n            var data = expandoData[ownerDocument[expando]];\n            if (!data) {\n                data = {};\n                expanID++;\n                ownerDocument[expando] = expanID;\n                expandoData[expanID] = data;\n            }\n            return data;\n        }\n\n        /**\n         * returns a shived element for the given nodeName and document\n         * @memberOf html5\n         * @param {String} nodeName name of the element\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived element.\n         */\n        function createElement(nodeName, ownerDocument, data){\n            if (!ownerDocument) {\n                ownerDocument = document;\n            }\n            if(supportsUnknownElements){\n                return ownerDocument.createElement(nodeName);\n            }\n            if (!data) {\n                data = getExpandoData(ownerDocument);\n            }\n            var node;\n\n            if (data.cache[nodeName]) {\n                node = data.cache[nodeName].cloneNode();\n            } else if (saveClones.test(nodeName)) {\n                node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n            } else {\n                node = data.createElem(nodeName);\n            }\n\n            // Avoid adding some elements to fragments in IE < 9 because\n            // * Attributes like `name` or `type` cannot be set/changed once an element\n            //   is inserted into a document/fragment\n            // * Link elements with `src` attributes that are inaccessible, as with\n            //   a 403 response, will cause the tab/window to crash\n            // * Script elements appended to fragments will execute when their `src`\n            //   or `text` property is set\n            return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node) : node;\n        }\n\n        /**\n         * returns a shived DocumentFragment for the given document\n         * @memberOf html5\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived DocumentFragment.\n         */\n        function createDocumentFragment(ownerDocument, data){\n            if (!ownerDocument) {\n                ownerDocument = document;\n            }\n            if(supportsUnknownElements){\n                return ownerDocument.createDocumentFragment();\n            }\n            data = data || getExpandoData(ownerDocument);\n            var clone = data.frag.cloneNode(),\n                i = 0,\n                elems = getElements(),\n                l = elems.length;\n            for(;i<l;i++){\n                clone.createElement(elems[i]);\n            }\n            return clone;\n        }\n\n        /**\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n         * @private\n         * @param {Document|DocumentFragment} ownerDocument The document.\n         * @param {Object} data of the document.\n         */\n        function shivMethods(ownerDocument, data) {\n            if (!data.cache) {\n                data.cache = {};\n                data.createElem = ownerDocument.createElement;\n                data.createFrag = ownerDocument.createDocumentFragment;\n                data.frag = data.createFrag();\n            }\n\n\n            ownerDocument.createElement = function(nodeName) {\n                //abort shiv\n                if (!html5.shivMethods) {\n                    return data.createElem(nodeName);\n                }\n                return createElement(nodeName, ownerDocument, data);\n            };\n\n            ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                'var n=f.cloneNode(),c=n.createElement;' +\n                'h.shivMethods&&(' +\n                // unroll the `createElement` calls\n                getElements().join().replace(/\\w+/g, function(nodeName) {\n                    data.createElem(nodeName);\n                    data.frag.createElement(nodeName);\n                    return 'c(\"' + nodeName + '\")';\n                }) +\n                ');return n}'\n            )(html5, data.frag);\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Shivs the given document.\n         * @memberOf html5\n         * @param {Document} ownerDocument The document to shiv.\n         * @returns {Document} The shived document.\n         */\n        function shivDocument(ownerDocument) {\n            if (!ownerDocument) {\n                ownerDocument = document;\n            }\n            var data = getExpandoData(ownerDocument);\n\n            if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n                data.hasCSS = !!addStyleSheet(ownerDocument,\n                    // corrects block display not defined in IE6/7/8/9\n                    'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}' +\n                        // adds styling not present in IE6/7/8/9\n                        'mark{background:#FF0;color:#000}'\n                );\n            }\n            if (!supportsUnknownElements) {\n                shivMethods(ownerDocument, data);\n            }\n            return ownerDocument;\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * The `html5` object is exposed so that more elements can be shived and\n         * existing shiving can be detected on iframes.\n         * @type Object\n         * @example\n         *\n         * // options can be changed before the script is included\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n         */\n        var html5 = {\n\n            /**\n             * An array or space separated string of node names of the elements to shiv.\n             * @memberOf html5\n             * @type Array|String\n             */\n            'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',\n\n            /**\n             * A flag to indicate that the HTML5 style sheet should be inserted.\n             * @memberOf html5\n             * @type Boolean\n             */\n            'shivCSS': (options.shivCSS !== false),\n\n            /**\n             * Is equal to true if a browser supports creating unknown/HTML5 elements\n             * @memberOf html5\n             * @type boolean\n             */\n            'supportsUnknownElements': supportsUnknownElements,\n\n            /**\n             * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n             * methods should be overwritten.\n             * @memberOf html5\n             * @type Boolean\n             */\n            'shivMethods': (options.shivMethods !== false),\n\n            /**\n             * A string to describe the type of `html5` object (\"default\" or \"default print\").\n             * @memberOf html5\n             * @type String\n             */\n            'type': 'default',\n\n            // shivs the document according to the specified `html5` object options\n            'shivDocument': shivDocument,\n\n            //creates a shived element\n            createElement: createElement,\n\n            //creates a shived documentFragment\n            createDocumentFragment: createDocumentFragment\n        };\n\n        /*--------------------------------------------------------------------------*/\n\n        // expose html5\n        window.html5 = html5;\n\n        // shiv the document\n        shivDocument(document);\n\n    }(this, document));\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version      = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes     = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq            = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent      = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps  = testPropsAll;\n    /*>>testallprops*/\n\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles    = injectElementWithStyles;\n    /*>>teststyles*/\n\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed      = function(prop, obj, elem){\n        if(!obj) {\n            return testPropsAll(prop, 'pfx');\n        } else {\n            // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n            return testPropsAll(prop, obj, elem);\n        }\n    };\n    /*>>prefixed*/\n\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n        // Add the new classes to the <html> element.\n        (enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n\n})(this, this.document);","MSP_TwoFactorAuth/js/change_provider.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'uiComponent',\n    'ko'\n], function (Component, ko) {\n    return Component.extend({\n        showChangeMethod: ko.observable(false),\n\n        providers: [],\n        switchIcon: '',\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/change_provider'\n        },\n\n        /**\n         * Get switch icon URL\n         * @returns {String}\n         */\n        getSwitchIconUrl: function () {\n            return this.switchIcon;\n        },\n\n        /**\n         * Show available alternative 2FA providers\n         */\n        displayChangeMethod: function () {\n            this.showChangeMethod(true);\n        },\n\n        /**\n         * Return a list of alternative providers\n         * @returns {Array}\n         */\n        getProviders: function () {\n            return this.providers;\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/error.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate'\n], function ($, alert) {\n    return {\n        /**\n         * Display an error message\n         * @param {String} message\n         */\n        display: function (message) {\n            alert({\n                title: $.mage.__('Error'),\n                content: message\n            });\n        }\n    };\n});\n","MSP_TwoFactorAuth/js/registry.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'ko'\n], function (ko) {\n    return {\n        trustThisDevice: ko.observable(false)\n    };\n});\n","MSP_TwoFactorAuth/js/trust_device.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/registry'\n], function (Component, registry) {\n    return Component.extend({\n        checked: registry.trustThisDevice,\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/trust_device'\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/authy/auth.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/error',\n    'MSP_TwoFactorAuth/js/registry',\n    'mage/translate'\n], function ($, ko, Component, error, registry) {\n    return Component.extend({\n        selectedMethod: ko.observable(''),\n        waitingText: ko.observable(''),\n        success: ko.observable(false),\n        tokenCode: ko.observable(''),\n\n        trustThisDevice: registry.trustThisDevice,\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/authy/auth'\n        },\n\n        waitForOneTouchApprovalTimeout: 0,\n\n        postUrl: '',\n        tokenRequestUrl: '',\n        oneTouchUrl: '',\n        verifyOneTouchUrl: '',\n\n        /**\n         * Get auth post URL\n         * @returns {String}\n         */\n        getPostUrl: function () {\n            return this.postUrl;\n        },\n\n        /**\n         * Get token request URL\n         * @returns {String}\n         */\n        getTokenRequestUrl: function () {\n            return this.tokenRequestUrl;\n        },\n\n        /**\n         * Get one touch request URL\n         * @returns {String}\n         */\n        getOneTouchUrl: function () {\n            return this.oneTouchUrl;\n        },\n\n        /**\n         * Get one touch verification URL\n         * @returns {String}\n         */\n        getVerifyOneTouchUrl: function () {\n            return this.verifyOneTouchUrl;\n        },\n\n        /**\n         * Get success URL\n         * @returns {String}\n         */\n        getSuccessUrl: function () {\n            return this.successUrl;\n        },\n\n        /**\n         * Go to login page\n         */\n        login: function () {\n            this.success(true);\n            self.location.href = this.getSuccessUrl();\n        },\n\n        /**\n         * Stop onetouch approval background approval\n         */\n        stopWaitingOnetouchApproval: function () {\n            if (this.waitForOneTouchApprovalTimeout) {\n                window.clearTimeout(this.waitForOneTouchApprovalTimeout);\n                this.waitForOneTouchApprovalTimeout = 0;\n            }\n        },\n\n        /**\n         * Switch to authy code validation\n         * @param {String} via\n         */\n        runSendCode: function (via) {\n            var me = this;\n\n            this.selectedMethod('code');\n\n            if (via !== 'token') {\n                $.getJSON(\n                    this.getTokenRequestUrl() + '?via=' +\n                    via + '&tfa_trust_device=' + (me.trustThisDevice() ? 1 : 0)\n                )\n                    .fail(function () {\n                        error.display('There was an error trying to contact Authy services');\n                        me.switchAnotherMethod();\n                    });\n            }\n        },\n\n        /**\n         * Switch to authy token code validation\n         */\n        runSendCodeToken: function () {\n            this.runSendCode('token');\n        },\n\n        /**\n         * Switch to authy sms code validation\n         */\n        runSendCodeSms: function () {\n            this.runSendCode('sms');\n        },\n\n        /**\n         * Switch to authy call code validation\n         */\n        runSendCodeCall: function () {\n            this.runSendCode('call');\n        },\n\n        /**\n         * Switch to one touch validation\n         */\n        runOneTouch: function () {\n            var me = this;\n\n            this.selectedMethod('onetouch');\n            this.waitingText('Sending push notification...');\n            this.success(false);\n\n            this.stopWaitingOnetouchApproval();\n\n            $.getJSON(this.getOneTouchUrl() + '?tfa_trust_device=' + (me.trustThisDevice() ? 1 : 0))\n                .done(function () {\n                    me.waitForOneTouchApproval();\n                })\n                .fail(function () {\n                    error.display('There was an error trying to contact Authy services');\n                    me.switchAnotherMethod();\n                });\n        },\n\n        /**\n         * Start background one touch approval check\n         */\n        waitForOneTouchApproval: function () {\n            var me = this;\n\n            this.waitingText('Waiting for approval...');\n\n            $.getJSON(this.getVerifyOneTouchUrl())\n                .done(function (res) {\n                    if (res.status === 'retry') {\n                        me.waitForOneTouchApprovalTimeout = window.setTimeout(function () {\n                            me.waitForOneTouchApproval();\n                        }, 1000);\n                    } else if (res.status === 'expired') {\n                        error.display($.mage.__('Your request has been expired'));\n                        me.switchAnotherMethod();\n                    } else if (res.status === 'denied') {\n                        error.display($.mage.__('Your request has been rejected'));\n                        me.switchAnotherMethod();\n                    } else if (res.status === 'approved') {\n                        me.login();\n                    }\n                })\n                .fail(function () {\n                    error.display('There was an error trying to contact Authy services');\n                    this.switchAnotherMethod();\n                });\n        },\n\n        /**\n         * Switch back to method selection\n         */\n        switchAnotherMethod: function () {\n            this.selectedMethod('');\n            this.waitingText('');\n            this.success(false);\n        },\n\n        /**\n         * Verify authy code\n         */\n        verifyCode: function () {\n            var me = this;\n\n            this.waitingText('Please wait...');\n\n            $.post(this.getPostUrl(), {\n                'tfa_code': this.tokenCode\n            })\n                .done(function (res) {\n                    if (res.success) {\n                        me.login();\n                    } else {\n                        error.display(res.message);\n                        me.waitingText('');\n                        me.tokenCode('');\n                    }\n                })\n                .fail(function () {\n                    error.display('There was an internal error trying to verify your code');\n                });\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/authy/configure.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/authy/configure/registry'\n], function (ko, Component, registry) {\n    return Component.extend({\n        currentStep: registry.currentStep,\n        defaults: {\n            template: 'MSP_TwoFactorAuth/authy/configure'\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/authy/configure/register.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/error',\n    'MSP_TwoFactorAuth/js/authy/configure/registry',\n    'mage/translate'\n], function ($, ko, Component, error, registry) {\n    return Component.extend({\n        configurePostUrl: '',\n        countries: [],\n\n        country: ko.observable(''),\n        phone: ko.observable(''),\n        method: ko.observable(''),\n\n        waitText: ko.observable(''),\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/authy/configure/register'\n        },\n\n        /**\n         * Get configure POST url\n         * @returns {String}\n         */\n        getConfigurePostUrl: function () {\n            return this.configurePostUrl;\n        },\n\n        /**\n         * Get a list of available countries\n         * @returns {Array}\n         */\n        getCountries: function () {\n            return this.countries;\n        },\n\n        /**\n         * Go to next step\n         */\n        nextStep: function () {\n            registry.currentStep('verify');\n            window.setTimeout(function () {\n                registry.currentStep('register');\n            }, registry.secondsToExpire() * 1000);\n        },\n\n        /**\n         * Start Authy registration procedure\n         */\n        doRegister: function () {\n            var me = this;\n\n            this.waitText('Please wait...');\n            $.post(this.getConfigurePostUrl(), {\n                'tfa_country': this.country(),\n                'tfa_phone': this.phone(),\n                'tfa_method': this.method()\n\n            })\n                .done(function (res) {\n                    if (res.success) {\n                        registry.messageText(res.message);\n                        registry.secondsToExpire(res['seconds_to_expire']);\n                        me.nextStep();\n                    } else {\n                        error.display(res.message);\n                    }\n                    me.waitText('');\n                })\n                .fail(function () {\n                    error.display('There was an internal error trying to verify your code');\n                    me.waitText('');\n                });\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/authy/configure/registry.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'ko'\n], function (ko) {\n    return {\n        currentStep: ko.observable('register'),\n        messageText: ko.observable(''),\n        secondsToExpire: ko.observable(0)\n    };\n});\n","MSP_TwoFactorAuth/js/authy/configure/verify.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/error',\n    'MSP_TwoFactorAuth/js/authy/configure/registry',\n    'mage/translate'\n], function ($, ko, Component, error, registry) {\n    return Component.extend({\n        verifyCode: ko.observable(''),\n        messageText: registry.messageText,\n        waitText: ko.observable(''),\n\n        verifyPostUrl: '',\n        successUrl: '',\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/authy/configure/verify'\n        },\n\n        /**\n         * Get verification post URL\n         * @returns {String}\n         */\n        getVerifyPostUrl: function () {\n            return this.verifyPostUrl;\n        },\n\n        /**\n         * Go to next step\n         */\n        nextStep: function () {\n            registry.currentStep('login');\n            self.location.href = this.successUrl;\n        },\n\n        /**\n         * Verify auth code\n         */\n        doVerify: function () {\n            var me = this;\n\n            this.waitText('Please wait...');\n            $.post(this.getVerifyPostUrl(), {\n                'tfa_verify': this.verifyCode()\n            })\n                .done(function (res) {\n                    if (res.success) {\n                        me.nextStep();\n                    } else {\n                        error.display(res.message);\n                    }\n                    me.waitText('');\n                })\n                .fail(function () {\n                    error.display('There was an internal error trying to verify your code');\n                    me.waitText('');\n                });\n        },\n\n        /**\n         * Go to previous step to change phone number\n         */\n        changePhoneNumber: function () {\n            registry.currentStep('register');\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/duo/api.js":"/**\n * Duo Web SDK v2\n * Copyright 2017, Duo Security\n */\n\n/* eslint-disable */\n// jscs:disable\n\n(function (root, factory) {\n/*eslint-disable */\nif (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n    /*eslint-enable */\n} else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n} else {\n    // Browser globals (root is window)\n    var Duo = factory();\n    // If the Javascript was loaded via a script tag, attempt to autoload\n    // the frame.\n\n    Duo._onReady(Duo.init);\n\n    // Attach Duo to the `window` object\n    root.Duo = Duo;\n}\n}(this, function () {\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\n    var VALID_OPEN_WINDOW_DOMAINS = [\n      'duo.com',\n      'duosecurity.com',\n      'duomobile.s3-us-west-1.amazonaws.com'\n    ];\n\n    var iframeId = 'duo_iframe',\n      postAction = '',\n      postArgument = 'sig_response',\n      host,\n      sigRequest,\n      duoSig,\n      appSig,\n      iframe,\n      submitCallback;\n\n    function throwError(message, url) {\n        throw new Error(\n          'Duo Web SDK error: ' + message +\n          (url ? '\\n' + 'See ' + url + ' for more information' : '')\n        );\n    }\n\n    function hyphenize(str) {\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\n    }\n\n    // cross-browser data attributes\n    function getDataAttribute(element, name) {\n        if ('dataset' in element) {\n            return element.dataset[name];\n        }\n\n        return element.getAttribute('data-' + hyphenize(name));\n\n    }\n\n    // cross-browser event binding/unbinding\n    function on(context, event, fallbackEvent, callback) {\n        if ('addEventListener' in window) {\n            context.addEventListener(event, callback, false);\n        } else {\n            context.attachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function off(context, event, fallbackEvent, callback) {\n        if ('removeEventListener' in window) {\n            context.removeEventListener(event, callback, false);\n        } else {\n            context.detachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function onReady(callback) {\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function offReady(callback) {\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function onMessage(callback) {\n        on(window, 'message', 'onmessage', callback);\n    }\n\n    function offMessage(callback) {\n        off(window, 'message', 'onmessage', callback);\n    }\n\n    /**\n     * Parse the sig_request parameter, throwing errors if the token contains\n     * a server error or if the token is invalid.\n     *\n     * @param {String} sig Request token\n     */\n    function parseSigRequest(sig) {\n        if (!sig) {\n            // nothing to do\n            return;\n        }\n\n        // see if the token contains an error, throwing it if it does\n        if (sig.indexOf('ERR|') === 0) {\n            throwError(sig.split('|')[1]);\n        }\n\n        // validate the token\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\n            throwError(\n              'Duo was given a bad token.  This might indicate a configuration ' +\n              'problem with one of Duo\\'s client libraries.',\n              'https://www.duosecurity.com/docs/duoweb#first-steps'\n            );\n        }\n\n        var sigParts = sig.split(':');\n\n        // hang on to the token, and the parsed duo and app sigs\n        sigRequest = sig;\n        duoSig = sigParts[0];\n        appSig = sigParts[1];\n\n        return {\n            sigRequest: sig,\n            duoSig: sigParts[0],\n            appSig: sigParts[1]\n        };\n    }\n\n    /**\n     * This function is set up to run when the DOM is ready, if the iframe was\n     * not available during `init`.\n     */\n    function onDOMReady() {\n        iframe = document.getElementById(iframeId);\n\n        if (!iframe) {\n            throw new Error(\n              'This page does not contain an iframe for Duo to use.' +\n              'Add an element like <iframe id=\"duo_iframe\"></iframe> ' +\n              'to this page.  ' +\n              'See https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe ' +\n              'for more information.'\n            );\n        }\n\n        // we've got an iframe, away we go!\n        ready();\n\n        // always clean up after yourself\n        offReady(onDOMReady);\n    }\n\n    /**\n     * Validate that a MessageEvent came from the Duo service, and that it\n     * is a properly formatted payload.\n     *\n     * The Google Chrome sign-in page injects some JS into pages that also\n     * make use of postMessage, so we need to do additional validation above\n     * and beyond the origin.\n     *\n     * @param {MessageEvent} event Message received via postMessage\n     */\n    function isDuoMessage(event) {\n        return Boolean(\n          event.origin === 'https://' + host &&\n          typeof event.data === 'string' &&\n          (\n            event.data.match(DUO_MESSAGE_FORMAT) ||\n            event.data.match(DUO_ERROR_FORMAT) ||\n            event.data.match(DUO_OPEN_WINDOW_FORMAT)\n          )\n        );\n    }\n\n    /**\n     * Validate the request token and prepare for the iframe to become ready.\n     *\n     * All options below can be passed into an options hash to `Duo.init`, or\n     * specified on the iframe using `data-` attributes.\n     *\n     * Options specified using the options hash will take precedence over\n     * `data-` attributes.\n     *\n     * Example using options hash:\n     * ```javascript\n     * Duo.init({\n       *     iframe: \"some_other_id\",\n       *     host: \"api-main.duo.test\",\n       *     sig_request: \"...\",\n       *     post_action: \"/auth\",\n       *     post_argument: \"resp\"\n       * });\n     * ```\n     *\n     * Example using `data-` attributes:\n     * ```\n     * <iframe id=\"duo_iframe\"\n     *         data-host=\"api-main.duo.test\"\n     *         data-sig-request=\"...\"\n     *         data-post-action=\"/auth\"\n     *         data-post-argument=\"resp\"\n     *         >\n     * </iframe>\n     * ```\n     *\n     * @param {Object} options\n     * @param {String} options.iframe                         The iframe, or id of an iframe to set up\n     * @param {String} options.host                           Hostname\n     * @param {String} options.sig_request                    Request token\n     * @param {String} [options.post_action='']               URL to POST back to after successful auth\n     * @param {String} [options.post_argument='sig_response'] Parameter name to use for response token\n     * @param {Function} [options.submit_callback]            If provided, duo will not submit the form instead execute\n     *                                                        the callback function with reference to the \"duo_form\" form object\n     *                                                        submit_callback can be used to prevent the webpage from reloading.\n     */\n    function init(options) {\n        if (options) {\n            if (options.host) {\n                host = options.host;\n            }\n\n            if (options.sig_request) {\n                parseSigRequest(options.sig_request);\n            }\n\n            if (options.post_action) {\n                postAction = options.post_action;\n            }\n\n            if (options.post_argument) {\n                postArgument = options.post_argument;\n            }\n\n            if (options.iframe) {\n                if (options.iframe.tagName) {\n                    iframe = options.iframe;\n                } else if (typeof options.iframe === 'string') {\n                    iframeId = options.iframe;\n                }\n            }\n\n            if (typeof options.submit_callback === 'function') {\n                submitCallback = options.submit_callback;\n            }\n        }\n\n        // if we were given an iframe, no need to wait for the rest of the DOM\n        if (iframe) {\n            ready();\n        } else {\n            // try to find the iframe in the DOM\n            iframe = document.getElementById(iframeId);\n\n            // iframe is in the DOM, away we go!\n            if (iframe) {\n                ready();\n            } else {\n                // wait until the DOM is ready, then try again\n                onReady(onDOMReady);\n            }\n        }\n\n        // always clean up after yourself!\n        offReady(init);\n    }\n\n    /**\n     * This function is called when a message was received from another domain\n     * using the `postMessage` API.  Check that the event came from the Duo\n     * service domain, and that the message is a properly formatted payload,\n     * then perform the post back to the primary service.\n     *\n     * @param event Event object (contains origin and data)\n     */\n    function onReceivedMessage(event) {\n        if (isDuoMessage(event)) {\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\n                var url = event.data.substring('DUO_OPEN_WINDOW|'.length);\n\n                if (isValidUrlToOpen(url)) {\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\n                    window.open(url, '_self');\n                }\n            } else {\n                // the event came from duo, do the post back\n                doPostBack(event.data);\n\n                // always clean up after yourself!\n                offMessage(onReceivedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validate that this passed in URL is one that we will actually allow to\n     * be opened.\n     * @param url String URL that the message poster wants to open\n     * @returns {boolean} true if we allow this url to be opened in the window\n     */\n    function isValidUrlToOpen(url) {\n        if (!url) {\n            return false;\n        }\n\n        var parser = document.createElement('a');\n\n        parser.href = url;\n\n        if (parser.protocol === 'duotrustedendpoints:') {\n            return true;\n        } else if (parser.protocol !== 'https:') {\n            return false;\n        }\n\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\n            if (parser.hostname.endsWith('.' + VALID_OPEN_WINDOW_DOMAINS[i]) ||\n              parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\n     */\n    function ready() {\n        if (!host) {\n            host = getDataAttribute(iframe, 'host');\n\n            if (!host) {\n                throwError(\n                  'No API hostname is given for Duo to use.  Be sure to pass ' +\n                  'a `host` parameter to Duo.init, or through the `data-host` ' +\n                  'attribute on the iframe element.',\n                  'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n                );\n            }\n        }\n\n        if (!duoSig || !appSig) {\n            parseSigRequest(getDataAttribute(iframe, 'sigRequest'));\n\n            if (!duoSig || !appSig) {\n                throwError(\n                  'No valid signed request is given.  Be sure to give the ' +\n                  '`sig_request` parameter to Duo.init, or use the ' +\n                  '`data-sig-request` attribute on the iframe element.',\n                  'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n                );\n            }\n        }\n\n        // if postAction/Argument are defaults, see if they are specified\n        // as data attributes on the iframe\n        if (postAction === '') {\n            postAction = getDataAttribute(iframe, 'postAction') || postAction;\n        }\n\n        if (postArgument === 'sig_response') {\n            postArgument = getDataAttribute(iframe, 'postArgument') || postArgument;\n        }\n\n        // point the iframe at Duo\n        iframe.src = [\n          'https://', host, '/frame/web/v1/auth?tx=', duoSig,\n          '&parent=', encodeURIComponent(document.location.href),\n          '&v=2.6'\n        ].join('');\n\n        // listen for the 'message' event\n        onMessage(onReceivedMessage);\n    }\n\n    /**\n     * We received a postMessage from Duo.  POST back to the primary service\n     * with the response token, and any additional user-supplied parameters\n     * given in form#duo_form.\n     */\n    function doPostBack(response) {\n        // create a hidden input to contain the response token\n        var input = document.createElement('input');\n\n        input.type = 'hidden';\n        input.name = postArgument;\n        input.value = response + ':' + appSig;\n\n        // user may supply their own form with additional inputs\n        var form = document.getElementById('duo_form');\n\n        // if the form doesn't exist, create one\n        if (!form) {\n            form = document.createElement('form');\n\n            // insert the new form after the iframe\n            iframe.parentElement.insertBefore(form, iframe.nextSibling);\n        }\n\n        // make sure we are actually posting to the right place\n        form.method = 'POST';\n        form.action = postAction;\n\n        // add the response token input to the form\n        form.appendChild(input);\n\n        // away we go!\n        if (typeof submitCallback === 'function') {\n            submitCallback.call(null, form);\n        } else {\n            form.submit();\n        }\n    }\n\n    return {\n        init: init,\n        _onReady: onReady,\n        _parseSigRequest: parseSigRequest,\n        _isDuoMessage: isDuoMessage,\n        _doPostBack: doPostBack\n    };\n}));\n\n/* eslint-enable */\n","MSP_TwoFactorAuth/js/duo/auth.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/duo/api'\n], function (ko, Component, duo) {\n    return Component.extend({\n        currentStep: ko.observable('register'),\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/duo/auth'\n        },\n\n        signature: '',\n        apiHost: '',\n        postUrl: '',\n        authenticateData: {},\n\n        /**\n         * Start waiting loop\n         */\n        onAfterRender: function () {\n            window.setTimeout(function () {\n                duo.init();\n            }, 100);\n        },\n\n        /**\n         * Get POST URL\n         * @returns {String}\n         */\n        getPostUrl: function () {\n            return this.postUrl;\n        },\n\n        /**\n         * Get signature\n         * @returns {String}\n         */\n        getSignature: function () {\n            return this.signature;\n        },\n\n        /**\n         * Get API host\n         * @returns {String}\n         */\n        getApiHost: function () {\n            return this.apiHost;\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/form/provider.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'Magento_Ui/js/form/provider'\n], function (Provider) {\n    return Provider.extend({\n        /**\n         * @see Magento_Ui/js/form/provider\n         * @returns {Element}\n         */\n        save: function () {\n            // Disable independent save (we have a parent form with own validation)\n            return this;\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/form/element/providers.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine(['Magento_Ui/js/form/element/abstract'], function (Abstract) {\n    return Abstract.extend({\n        /**\n         * Get a list of forced providers\n         * @returns {Array}\n         */\n        getForcedProviders: function () {\n            return this.forced_providers;\n        },\n\n        /**\n         * Get a list of enabled providers\n         * @returns {Array}\n         */\n        getEnabledProviders: function () {\n            return this.enabled_providers;\n        },\n\n        /**\n         * Return true if a provider is selected\n         * @param {String} provider\n         * @returns {Boolean}\n         */\n        isSelected: function (provider) {\n            var i, providers = this.value();\n\n            for (i = 0; i < providers.length; i++) {\n                if (providers[i] === provider) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/form/element/reset_providers.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n  'Magento_Ui/js/form/element/abstract',\n  'Magento_Ui/js/modal/confirm'\n], function (Abstract, confirm) {\n    return Abstract.extend({\n        /**\n         * Get a list of providers with reset option\n         * @returns {Array}\n         */\n        getResetProviders: function () {\n            return this.source.data['reset_providers'] ? this.source.data['reset_providers'] : [];\n        },\n\n        /**\n         * Reset a provider\n         * @param {Object} item\n         */\n        resetProvider: function (item) {\n            confirm({\n                title: 'Confirm',\n                content: 'Are you sure you want to reset ' + item.label + ' provider?',\n                actions: {\n                    confirm: function () { // jscs:ignore jsDoc\n                        self.location.href = item.url;\n                    }\n                }\n            });\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/form/element/trusted_devices.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'Magento_Ui/js/form/element/abstract'\n], function (Abstract) {\n    return Abstract.extend({\n        /**\n         * Get a list of trusted devices\n         * @returns {Array}\n         */\n        getTrustedDevices: function () {\n            return this.source.data['trusted_devices'] ? this.source.data['trusted_devices'] : [];\n        },\n\n        /**\n         * Revoke a trusted device\n         * @param {Object} item\n         */\n        revokeDevice: function (item) {\n            self.location.href = item['revoke_url'];\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/google/auth.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/error',\n    'MSP_TwoFactorAuth/js/registry'\n], function ($, ko, Component, error, registry) {\n    return Component.extend({\n        currentStep: ko.observable('register'),\n        waitText: ko.observable(''),\n        verifyCode: ko.observable(''),\n        defaults: {\n            template: 'MSP_TwoFactorAuth/google/auth'\n        },\n\n        trustThisDevice: registry.trustThisDevice,\n\n        qrCodeUrl: '',\n        postUrl: '',\n        successUrl: '',\n        secretCode: '',\n\n        /**\n         * Get QR code URL\n         * @returns {String}\n         */\n        getQrCodeUrl: function () {\n            return this.qrCodeUrl;\n        },\n\n        /**\n         * Get POST URL\n         * @returns {String}\n         */\n        getPostUrl: function () {\n            return this.postUrl;\n        },\n\n        /**\n         * Get plain Secret Code\n         * @returns {string}\n         * @author Konrad Skrzynski <konrad.skrzynski@accenture.com>\n         */\n        getSecretCode: function() {\n            return this.secretCode;\n        },\n\n        /**\n         * Go to next step\n         */\n        nextStep: function () {\n            this.currentStep('login');\n            self.location.href = this.successUrl;\n        },\n\n        /**\n         * Verify auth code\n         */\n        doVerify: function () {\n            var me = this;\n\n            this.waitText('Please wait...');\n            $.post(this.getPostUrl(), {\n                'tfa_code': this.verifyCode(),\n                'tfa_trust_device': me.trustThisDevice() ? 1 : 0\n            })\n                .done(function (res) {\n                    if (res.success) {\n                        me.nextStep();\n                    } else {\n                        error.display(res.message);\n                        me.verifyCode('');\n                    }\n                    me.waitText('');\n                })\n                .fail(function () {\n                    error.display('There was an internal error trying to verify your code');\n                    me.waitText('');\n                });\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/u2fkey/api.js":"// Copyright 2014-2015 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/* eslint-disable */\n// jscs:disable\n\n/**\n * @fileoverview The U2F api.\n */\n\n'use strict';\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\n/**\n * The U2F extension id\n * @type {String}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {String}\n */\nu2f.MessageTypes = {\n    'U2F_REGISTER_REQUEST': 'u2f_register_request',\n    'U2F_SIGN_REQUEST': 'u2f_sign_request',\n    'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n    'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n    'OK': 0,\n    'OTHER_ERROR': 1,\n    'BAD_REQUEST': 2,\n    'CONFIGURATION_UNSUPPORTED': 3,\n    'DEVICE_INELIGIBLE': 4,\n    'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array<u2f.SignRequest>,\n *   registerRequests: ?Array<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function (callback) {\n    if (typeof chrome != 'undefined' && chrome.runtime) {\n        // The actual message here does not matter, but we need to get a reply\n        // for the callback to run. Thus, send an empty signature request\n        // in order to get a failure response.\n        var msg = {\n            type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n            signRequests: []\n        };\n\n        chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function () {\n            if (!chrome.runtime.lastError) {\n                // We are on a whitelisted origin and can talk directly\n                // with the extension.\n                u2f.getChromeRuntimePort_(callback);\n            } else {\n                // chrome.runtime was available, but we couldn't message\n                // the extension directly, use iframe\n                u2f.getIframePort_(callback);\n            }\n        });\n    } else if (u2f.isAndroidChrome_()) {\n        u2f.getAuthenticatorPort_(callback);\n    } else {\n        // chrome.runtime was not available at all, which is normal\n        // when this origin doesn't have access to any extensions.\n        u2f.getIframePort_(callback);\n    }\n};\n\n/**\n * Detect chrome running on android based on the browser's useragent.\n * @private\n */\nu2f.isAndroidChrome_ = function () {\n    var userAgent = navigator.userAgent;\n\n    return userAgent.indexOf('Chrome') != -1 &&\n        userAgent.indexOf('Android') != -1;\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function (callback) {\n    var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n        {\n        'includeTlsChannelId': true\n    });\n\n    setTimeout(function () {\n        callback(new u2f.WrappedChromeRuntimePort_(port));\n    }, 0);\n};\n\n/**\n * Return a 'port' abstraction to the Authenticator app.\n * @param {function(u2f.WrappedAuthenticatorPort_)} callback\n * @private\n */\nu2f.getAuthenticatorPort_ = function (callback) {\n    setTimeout(function () {\n        callback(new u2f.WrappedAuthenticatorPort_());\n    }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function (port) {\n    this.port_ = port;\n};\n\n/**\n * Format a return a sign request.\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {number} timeoutSeconds\n * @param {number} reqId\n * @return {Object}\n */\nu2f.WrappedChromeRuntimePort_.prototype.formatSignRequest_ =\n    function (signRequests, timeoutSeconds, reqId) {\n        return {\n            type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n            signRequests: signRequests,\n            timeoutSeconds: timeoutSeconds,\n            requestId: reqId\n        };\n    };\n\n/**\n * Format a return a register request.\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {Array<u2f.RegisterRequest>} signRequests\n * @param {number} timeoutSeconds\n * @param {number} reqId\n * @return {Object}\n */\nu2f.WrappedChromeRuntimePort_.prototype.formatRegisterRequest_ =\n    function (signRequests, registerRequests, timeoutSeconds, reqId) {\n        return {\n            type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n            signRequests: signRequests,\n            registerRequests: registerRequests,\n            timeoutSeconds: timeoutSeconds,\n            requestId: reqId\n        };\n    };\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function (message) {\n    this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {String} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function (eventName, handler) {\n        var name = eventName.toLowerCase();\n\n        if (name == 'message' || name == 'onmessage') {\n            this.port_.onMessage.addListener(function (message) {\n                // Emulate a minimal MessageEvent object\n                handler({\n                    'data': message\n                });\n            });\n        } else {\n            console.error('WrappedChromeRuntimePort only supports onMessage');\n        }\n    };\n\n/**\n * Wrap the Authenticator app with a MessagePort interface.\n * @constructor\n * @private\n */\nu2f.WrappedAuthenticatorPort_ = function () {\n    this.requestId_ = -1;\n    this.requestObject_ = null;\n};\n\n/**\n * Launch the Authenticator intent.\n * @param {Object} message\n */\nu2f.WrappedAuthenticatorPort_.prototype.postMessage = function (message) {\n    var intentLocation = /** @type {String} */ message;\n\n    document.location = intentLocation;\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface.\n * @param {String} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedAuthenticatorPort_.prototype.addEventListener =\n    function (eventName, handler) {\n        var name = eventName.toLowerCase();\n\n        if (name == 'message') {\n            var self = this;\n\n            /* Register a callback to that executes when\n             * chrome injects the response. */\n\n            window.addEventListener(\n                'message', self.onRequestUpdate_.bind(self, handler), false);\n        } else {\n            console.error('WrappedAuthenticatorPort only supports message');\n        }\n    };\n\n/**\n * Callback invoked  when a response is received from the Authenticator.\n * @param function({data: Object}) callback\n * @param {Object} message message Object\n */\nu2f.WrappedAuthenticatorPort_.prototype.onRequestUpdate_ =\n    function (callback, message) {\n        var messageObject = JSON.parse(message.data);\n        var intentUrl = messageObject['intentURL'];\n\n        var errorCode = messageObject['errorCode'];\n        var responseObject = null;\n\n        if (messageObject.hasOwnProperty('data')) {\n            responseObject = /** @type {Object} */\n                JSON.parse(messageObject['data']);\n            responseObject['requestId'] = this.requestId_;\n        }\n\n        /* Sign responses from the authenticator do not conform to U2F,\n         * convert to U2F here. */\n        responseObject = this.doResponseFixups_(responseObject);\n        callback({\n            'data': responseObject\n        });\n    };\n\n/**\n * Fixup the response provided by the Authenticator to conform with\n * the U2F spec.\n * @param {Object} responseData\n * @return {Object} the U2F compliant response object\n */\nu2f.WrappedAuthenticatorPort_.prototype.doResponseFixups_ =\n    function (responseObject) {\n        if (responseObject.hasOwnProperty('responseData')) {\n            return responseObject;\n        } else if (this.requestObject_['type'] != u2f.MessageTypes.U2F_SIGN_REQUEST) {\n            // Only sign responses require fixups.  If this is not a response\n            // to a sign request, then an internal error has occurred.\n            return {\n                'type': u2f.MessageTypes.U2F_REGISTER_RESPONSE,\n                'responseData': {\n                    'errorCode': u2f.ErrorCodes.OTHER_ERROR,\n                    'errorMessage': 'Internal error: invalid response from Authenticator'\n                }\n            };\n        }\n\n        /* Non-conformant sign response, do fixups. */\n        var encodedChallengeObject = responseObject['challenge'];\n\n        if (typeof encodedChallengeObject !== 'undefined') {\n            var challengeObject = JSON.parse(atob(encodedChallengeObject));\n            var serverChallenge = challengeObject['challenge'];\n            var challengesList = this.requestObject_['signData'];\n            var requestChallengeObject = null;\n\n            for (var i = 0; i < challengesList.length; i++) {\n                var challengeObject = challengesList[i];\n\n                if (challengeObject['keyHandle'] == responseObject['keyHandle']) {\n                    requestChallengeObject = challengeObject;\n                    break;\n                }\n            }\n        }\n        var responseData = {\n            'errorCode': responseObject['resultCode'],\n            'keyHandle': responseObject['keyHandle'],\n            'signatureData': responseObject['signature'],\n            'clientData': encodedChallengeObject\n        };\n\n        return {\n            'type': u2f.MessageTypes.U2F_SIGN_RESPONSE,\n            'responseData': responseData,\n            'requestId': responseObject['requestId']\n        };\n    };\n\n/**\n * Base URL for intents to Authenticator.\n * @const\n * @private\n */\nu2f.WrappedAuthenticatorPort_.INTENT_URL_BASE_ =\n    'intent:#Intent;action=com.google.android.apps.authenticator.AUTHENTICATE';\n\n/**\n * Format a return a sign request.\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {number} timeoutSeconds (ignored for now)\n * @param {number} reqId\n * @return {String}\n */\nu2f.WrappedAuthenticatorPort_.prototype.formatSignRequest_ =\n    function (signRequests, timeoutSeconds, reqId) {\n        if (!signRequests || signRequests.length == 0) {\n            return null;\n        }\n\n        /* TODO(fixme): stash away requestId, as the authenticator app does\n         * not return it for sign responses. */\n        this.requestId_ = reqId;\n\n        /* TODO(fixme): stash away the signRequests, to deal with the legacy\n         * response format returned by the Authenticator app. */\n        this.requestObject_ = {\n            'type': u2f.MessageTypes.U2F_SIGN_REQUEST,\n            'signData': signRequests,\n            'requestId': reqId,\n            'timeout': timeoutSeconds\n        };\n\n        var appId = signRequests[0]['appId'];\n        var intentUrl =\n            u2f.WrappedAuthenticatorPort_.INTENT_URL_BASE_ +\n            ';S.appId=' + encodeURIComponent(appId) +\n            ';S.eventId=' + reqId +\n            ';S.challenges=' +\n            encodeURIComponent(\n                JSON.stringify(this.getBrowserDataList_(signRequests))) + ';end';\n\n        return intentUrl;\n    };\n\n/**\n * Get the browser data objects from the challenge list\n * @param {Array} challenges list of challenges\n * @return {Array} list of browser data objects\n * @private\n */\nu2f.WrappedAuthenticatorPort_\n    .prototype.getBrowserDataList_ = function (challenges) {\n    return challenges\n        .map(function (challenge) {\n            var browserData = {\n                'typ': 'navigator.id.getAssertion',\n                'challenge': challenge['challenge']\n            };\n            var challengeObject = {\n                'challenge': browserData,\n                'keyHandle': challenge['keyHandle']\n            };\n\n            return challengeObject;\n        });\n};\n\n/**\n * Format a return a register request.\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {Array<u2f.RegisterRequest>} enrollChallenges\n * @param {number} timeoutSeconds (ignored for now)\n * @param {number} reqId\n * @return {Object}\n */\nu2f.WrappedAuthenticatorPort_.prototype.formatRegisterRequest_ =\n    function (signRequests, enrollChallenges, timeoutSeconds, reqId) {\n        if (!enrollChallenges || enrollChallenges.length == 0) {\n            return null;\n        }\n        // Assume the appId is the same for all enroll challenges.\n        var appId = enrollChallenges[0]['appId'];\n        var registerRequests = [];\n\n        for (var i = 0; i < enrollChallenges.length; i++) {\n            var registerRequest = {\n                'challenge': enrollChallenges[i]['challenge'],\n                'version': enrollChallenges[i]['version']\n            };\n\n            if (enrollChallenges[i]['appId'] != appId) {\n                // Only include the appId when it differs from the first appId.\n                registerRequest['appId'] = enrollChallenges[i]['appId'];\n            }\n            registerRequests.push(registerRequest);\n        }\n        var registeredKeys = [];\n\n        if (signRequests) {\n            for (i = 0; i < signRequests.length; i++) {\n                var key = {\n                    'keyHandle': signRequests[i]['keyHandle'],\n                    'version': signRequests[i]['version']\n                };\n                // Only include the appId when it differs from the appId that's\n                // being registered now.\n\n                if (signRequests[i]['appId'] != appId) {\n                    key['appId'] = signRequests[i]['appId'];\n                }\n                registeredKeys.push(key);\n            }\n        }\n        var request = {\n            'type': u2f.MessageTypes.U2F_REGISTER_REQUEST,\n            'appId': appId,\n            'registerRequests': registerRequests,\n            'registeredKeys': registeredKeys,\n            'requestId': reqId,\n            'timeoutSeconds': timeoutSeconds\n        };\n        var intentUrl =\n            u2f.WrappedAuthenticatorPort_.INTENT_URL_BASE_ +\n            ';S.request=' + encodeURIComponent(JSON.stringify(request)) +\n            ';end';\n\n        /* TODO(fixme): stash away requestId, this is is not necessary for\n         * register requests, but here to keep parity with sign.\n         */\n\n        this.requestId_ = reqId;\n\n        return intentUrl;\n    };\n\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function (callback) {\n    // Create the iframe\n    var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n    var iframe = document.createElement('iframe');\n\n    iframe.src = iframeOrigin + '/u2f-comms.html';\n    iframe.setAttribute('style', 'display:none');\n    document.body.appendChild(iframe);\n\n    var channel = new MessageChannel();\n    var ready = function (message) {\n        if (message.data == 'ready') {\n            channel.port1.removeEventListener('message', ready);\n            callback(channel.port1);\n        } else {\n            console.error('First event on iframe port was not \"ready\"');\n        }\n    };\n\n    channel.port1.addEventListener('message', ready);\n    channel.port1.start();\n\n    iframe.addEventListener('load', function () {\n        // Deliver the port to the iframe and initialize\n        iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n    });\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function (callback) {\n    if (u2f.port_) {\n        callback(u2f.port_);\n    } else {\n        if (u2f.waitingForPort_.length == 0) {\n            u2f.getMessagePort(function (port) {\n                u2f.port_ = port;\n                u2f.port_.addEventListener('message',\n                    /** @type {function(Event)} */ u2f.responseHandler_);\n\n                // Careful, here be async callbacks. Maybe.\n                while (u2f.waitingForPort_.length)\n                    u2f.waitingForPort_.shift()(u2f.port_);\n            });\n        }\n        u2f.waitingForPort_.push(callback);\n    }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function (message) {\n    var response = message.data;\n    var reqId = response['requestId'];\n\n    if (!reqId || !u2f.callbackMap_[reqId]) {\n        console.error('Unknown or missing requestId in response.');\n\n        return;\n    }\n    var cb = u2f.callbackMap_[reqId];\n\n    delete u2f.callbackMap_[reqId];\n    cb(response['responseData']);\n};\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function (signRequests, callback, opt_timeoutSeconds) {\n    u2f.getPortSingleton_(function (port) {\n        var reqId = ++u2f.reqCounter_;\n\n        u2f.callbackMap_[reqId] = callback;\n        var timeoutSeconds = typeof opt_timeoutSeconds !== 'undefined' ?\n            opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC;\n        var req = port.formatSignRequest_(signRequests, timeoutSeconds, reqId);\n\n        port.postMessage(req);\n    });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array<u2f.RegisterRequest>} registerRequests\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function (registerRequests, signRequests,\n                        callback, opt_timeoutSeconds) {\n    u2f.getPortSingleton_(function (port) {\n        var reqId = ++u2f.reqCounter_;\n\n        u2f.callbackMap_[reqId] = callback;\n        var timeoutSeconds = typeof opt_timeoutSeconds !== 'undefined' ?\n            opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC;\n        var req = port.formatRegisterRequest_(\n            signRequests, registerRequests, timeoutSeconds, reqId);\n\n        port.postMessage(req);\n    });\n};\n\n/* eslint-enable */\n","MSP_TwoFactorAuth/js/u2fkey/auth.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/error',\n    'MSP_TwoFactorAuth/js/registry',\n    'MSP_TwoFactorAuth/js/u2fkey/api'\n], function ($, ko, Component, error, registry) {\n    return Component.extend({\n        currentStep: ko.observable('register'),\n        trustThisDevice: registry.trustThisDevice,\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/u2fkey/auth'\n        },\n\n        postUrl: '',\n        successUrl: '',\n        touchImageUrl: '',\n        authenticateData: {},\n\n        /**\n         * Start waiting loop\n         */\n        onAfterRender: function () {\n            this.waitForTouch();\n        },\n\n        /**\n         * Get touch image URL\n         * @returns {String}\n         */\n        getTouchImageUrl: function () {\n            return this.touchImageUrl;\n        },\n\n        /**\n         * Get POST URL\n         * @returns {String}\n         */\n        getPostUrl: function () {\n            return this.postUrl;\n        },\n\n        /**\n         * Get success URL\n         * @returns {String}\n         */\n        getSuccessUrl: function () {\n            return this.successUrl;\n        },\n        /**\n         * Wait for key touch\n         */\n        waitForTouch: function () {\n            var requestData = this.authenticateData,\n                me = this;\n\n            // eslint-disable-next-line no-undef\n            u2f.sign(\n                requestData,\n                function (signResponse) {\n                    $.post(me.getPostUrl(), {\n                        'request': requestData,\n                        'response': signResponse,\n                        'tfa_trust_device': me.trustThisDevice() ? 1 : 0\n                    }).done(function (res) {\n                        if (res.success) {\n                            me.currentStep('login');\n                            self.location.href = me.getSuccessUrl();\n                        } else {\n                            me.waitForTouch();\n                        }\n                    }).fail(function () {\n                        error.display('Invalid device');\n                    });\n                }, 120\n            );\n        }\n    });\n});\n","MSP_TwoFactorAuth/js/u2fkey/configure.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'MSP_TwoFactorAuth/js/error',\n    'MSP_TwoFactorAuth/js/u2fkey/api'\n], function ($, ko, Component, error) {\n    return Component.extend({\n        currentStep: ko.observable('register'),\n\n        defaults: {\n            template: 'MSP_TwoFactorAuth/u2fkey/configure'\n        },\n\n        postUrl: '',\n        successUrl: '',\n        touchImageUrl: '',\n        registerData: {},\n\n        /**\n         * Start waiting loop\n         */\n        onAfterRender: function () {\n            this.waitForTouch();\n        },\n\n        /**\n         * Get touch image URL\n         * @returns {String}\n         */\n        getTouchImageUrl: function () {\n            return this.touchImageUrl;\n        },\n\n        /**\n         * Get POST URL\n         * @returns {String}\n         */\n        getPostUrl: function () {\n            return this.postUrl;\n        },\n\n        /**\n         * Get success URL\n         * @returns {String}\n         */\n        getSuccessUrl: function () {\n            return this.successUrl;\n        },\n\n        /**\n         * Wait for key touch\n         */\n        waitForTouch: function () {\n            var requestData = this.registerData[0],\n                signs = this.registerData[1],\n                me = this;\n\n            // eslint-disable-next-line no-undef\n            u2f.register(\n                [requestData],\n                signs,\n                function (registerResponse) {\n                    $.post(me.getPostUrl(), {\n                        'request': requestData,\n                        'response': registerResponse\n                    }).done(function (res) {\n                        if (res.success) {\n                            me.currentStep('login');\n                            self.location.href = me.getSuccessUrl();\n                        } else {\n                            me.waitForTouch();\n                        }\n                    }).fail(function () {\n                        error.display('Unable to register your device');\n                    });\n                }, 120\n            );\n        }\n    });\n});\n","requirejs/domReady.js":"/**\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/domReady for details\n */\n/*jslint */\n/*global require: false, define: false, requirejs: false,\n  window: false, clearInterval: false, document: false,\n  self: false, setInterval: false */\n\n\ndefine(function () {\n    'use strict';\n\n    var isTop, testDiv, scrollIntervalId,\n        isBrowser = typeof window !== \"undefined\" && window.document,\n        isPageLoaded = !isBrowser,\n        doc = isBrowser ? document : null,\n        readyCalls = [];\n\n    function runCallbacks(callbacks) {\n        var i;\n        for (i = 0; i < callbacks.length; i += 1) {\n            callbacks[i](doc);\n        }\n    }\n\n    function callReady() {\n        var callbacks = readyCalls;\n\n        if (isPageLoaded) {\n            //Call the DOM ready callbacks\n            if (callbacks.length) {\n                readyCalls = [];\n                runCallbacks(callbacks);\n            }\n        }\n    }\n\n    /**\n     * Sets the page as loaded.\n     */\n    function pageLoaded() {\n        if (!isPageLoaded) {\n            isPageLoaded = true;\n            if (scrollIntervalId) {\n                clearInterval(scrollIntervalId);\n            }\n\n            callReady();\n        }\n    }\n\n    if (isBrowser) {\n        if (document.addEventListener) {\n            //Standards. Hooray! Assumption here that if standards based,\n            //it knows about DOMContentLoaded.\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\n            window.addEventListener(\"load\", pageLoaded, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onload\", pageLoaded);\n\n            testDiv = document.createElement('div');\n            try {\n                isTop = window.frameElement === null;\n            } catch (e) {}\n\n            //DOMContentLoaded approximation that uses a doScroll, as found by\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\n            //but modified by other contributors, including jdalton\n            if (testDiv.doScroll && isTop && window.external) {\n                scrollIntervalId = setInterval(function () {\n                    try {\n                        testDiv.doScroll();\n                        pageLoaded();\n                    } catch (e) {}\n                }, 30);\n            }\n        }\n\n        //Check if document is no longer loading, and if so, just trigger page load\n        //listeners. Latest webkit browsers also use \"interactive\", and\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\n        //entering \"interactive\" or \"complete\". More details:\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\n        //Hmm, this is more complicated on further use, see \"firing too early\"\n        //bug: https://github.com/requirejs/domReady/issues/1\n        //so removing the || document.readyState === \"interactive\" test.\n        //There is still a window.onload binding that should get fired if\n        //DOMContentLoaded is missed.\n        if (document.readyState !== \"loading\") {\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\n            setTimeout(pageLoaded);\n        }\n    }\n\n    /** START OF PUBLIC API **/\n\n    /**\n     * Registers a callback for DOM ready. If DOM is already ready, the\n     * callback is called immediately.\n     * @param {Function} callback\n     */\n    function domReady(callback) {\n        if (isPageLoaded) {\n            callback(doc);\n        } else {\n            readyCalls.push(callback);\n        }\n        return domReady;\n    }\n\n    domReady.version = '2.0.1';\n\n    /**\n     * Loader Plugin API method\n     */\n    domReady.load = function (name, req, onLoad, config) {\n        if (config.isBuild) {\n            onLoad(null);\n        } else {\n            domReady(onLoad);\n        }\n    };\n\n    /** END OF PUBLIC API **/\n\n    return domReady;\n});\n","Vertex_AddressValidation/js/lib/jquery.serialize-object.js":"/**\n * jQuery serializeObject\n * @copyright 2014, macek <paulmacek@gmail.com>\n * @link https://github.com/macek/jquery-serialize-object\n * @license BSD\n * @version 2.5.0\n */\n(function(root, factory) {\n\n  // AMD\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"jquery\"], function(exports, $) {\n      return factory(exports, $);\n    });\n  }\n\n  // CommonJS\n  else if (typeof exports !== \"undefined\") {\n    var $ = require(\"jquery\");\n    factory(exports, $);\n  }\n\n  // Browser\n  else {\n    factory(root, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(exports, $) {\n\n  var patterns = {\n    validate: /^[a-z_][a-z0-9_]*(?:\\[(?:\\d*|[a-z0-9_]+)\\])*$/i,\n    key:      /[a-z0-9_]+|(?=\\[\\])/gi,\n    push:     /^$/,\n    fixed:    /^\\d+$/,\n    named:    /^[a-z0-9_]+$/i\n  };\n\n  function FormSerializer(helper, $form) {\n\n    // private variables\n    var data     = {},\n        pushes   = {};\n\n    // private API\n    function build(base, key, value) {\n      base[key] = value;\n      return base;\n    }\n\n    function makeObject(root, value) {\n\n      var keys = root.match(patterns.key), k;\n\n      // nest, nest, ..., nest\n      while ((k = keys.pop()) !== undefined) {\n        // foo[]\n        if (patterns.push.test(k)) {\n          var idx = incrementPush(root.replace(/\\[\\]$/, ''));\n          value = build([], idx, value);\n        }\n\n        // foo[n]\n        else if (patterns.fixed.test(k)) {\n          value = build([], k, value);\n        }\n\n        // foo; foo[bar]\n        else if (patterns.named.test(k)) {\n          value = build({}, k, value);\n        }\n      }\n\n      return value;\n    }\n\n    function incrementPush(key) {\n      if (pushes[key] === undefined) {\n        pushes[key] = 0;\n      }\n      return pushes[key]++;\n    }\n\n    function encode(pair) {\n      switch ($('[name=\"' + pair.name + '\"]', $form).attr(\"type\")) {\n        case \"checkbox\":\n          return pair.value === \"on\" ? true : pair.value;\n        default:\n          return pair.value;\n      }\n    }\n\n    function addPair(pair) {\n      if (!patterns.validate.test(pair.name)) return this;\n      var obj = makeObject(pair.name, encode(pair));\n      data = helper.extend(true, data, obj);\n      return this;\n    }\n\n    function addPairs(pairs) {\n      if (!helper.isArray(pairs)) {\n        throw new Error(\"formSerializer.addPairs expects an Array\");\n      }\n      for (var i=0, len=pairs.length; i<len; i++) {\n        this.addPair(pairs[i]);\n      }\n      return this;\n    }\n\n    function serialize() {\n      return data;\n    }\n\n    function serializeJSON() {\n      return JSON.stringify(serialize());\n    }\n\n    // public API\n    this.addPair = addPair;\n    this.addPairs = addPairs;\n    this.serialize = serialize;\n    this.serializeJSON = serializeJSON;\n  }\n\n  FormSerializer.patterns = patterns;\n\n  FormSerializer.serializeObject = function serializeObject() {\n    return new FormSerializer($, this).\n      addPairs(this.serializeArray()).\n      serialize();\n  };\n\n  FormSerializer.serializeJSON = function serializeJSON() {\n    return new FormSerializer($, this).\n      addPairs(this.serializeArray()).\n      serializeJSON();\n  };\n\n  if (typeof $.fn !== \"undefined\") {\n    $.fn.serializeObject = FormSerializer.serializeObject;\n    $.fn.serializeJSON   = FormSerializer.serializeJSON;\n  }\n\n  exports.FormSerializer = FormSerializer;\n\n  return FormSerializer;\n}));\n","Vertex_Tax/js/allowed-countries.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine(['jquery', 'jquery/ui'], function ($) {\n    'use strict';\n\n    $.widget('vertex.allowedCountries', {\n        /**\n         * Bind all optgroups under the attached element to mass-select/mass-deselect their children on click\n         *\n         * @private\n         */\n        _create: function () {\n            $(this.element).on('click', 'optgroup', this.filterClick.bind(this));\n        },\n\n        /**\n         * Filter out any clicks where the target was not explicitly the optgroup\n         *\n         * @param {Event} event\n         * @return void\n         */\n        filterClick: function (event) {\n            if (!$(event.target).is('optgroup')) {\n                return;\n            }\n\n            this._processClick(event);\n        },\n\n        /**\n         * Decide to select or unselect all child elements and execute the chosen task\n         *\n         * @private\n         * @param {Event} event\n         * @return void\n         */\n        _processClick: function (event) {\n            var optgroup = $(event.target),\n                select = optgroup.closest('select'),\n                scrollTop = select.scrollTop();\n\n            if (optgroup.children('option:not(:selected)').length === 0) {\n                optgroup.children('option').prop('selected', false);\n            } else {\n                optgroup.children('option').prop('selected', true);\n            }\n\n            //  Maintain current scroll position\n            // Default behavior, in chrome at least, is to jump to some other selected option\n            setTimeout(function () {\n                select.scrollTop(scrollTop);\n            }, 0);\n        }\n    });\n\n    return $.vertex.allowedCountries;\n});\n","Vertex_Tax/js/form/caption-formatter.js":"/*\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine(function () {\n    'use strict';\n\n    return {\n        /**\n         * Return formatted selected option value\n         * @param {Object} selected\n         * @returns {String}\n         */\n        getFormattedValue: function (selected) {\n            var label = '';\n\n            if (selected.parent) {\n                label = selected.parent + ' - ';\n            }\n            label += selected.label;\n            return label;\n        }\n    };\n});\n","Vertex_Tax/js/form/flex-field-select.js":"/*\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/element/ui-select',\n    'Vertex_Tax/js/form/caption-formatter'\n], function (_, Component, captionFormatter) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            presets: {\n                optgroup: {\n                    openLevelsAction: true,\n                    showOpenLevelsActionIcon: true\n                }\n            }\n        },\n\n        /**\n         * Set Caption\n         */\n        setCaption: function () {\n            var length, label;\n\n            if (!_.isArray(this.value()) && this.value()) {\n                length = 1;\n            } else if (this.value()) {\n                length = this.value().length;\n            } else {\n                this.value([]);\n                length = 0;\n            }\n\n            if (length && this.getSelected().length) {\n                label = captionFormatter.getFormattedValue(this.getSelected()[0]);\n                this.placeholder(label);\n            } else {\n                this.placeholder(this.selectedPlaceholders.defaultPlaceholder);\n            }\n\n            return this.placeholder();\n        }\n    });\n});\n","Vertex_Tax/js/form/element/custom-option-flex-field-select.js":"/*\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine(['underscore', 'Magento_Ui/js/form/element/select'], function (_, Select) {\n    'use strict';\n\n    return Select.extend({\n        /**\n         * Overwrites the parent's filter to allow for checking if a value is\n         * in an array and for allowing the value of \"unmapped\" through all\n         * filters\n         *\n         * @param {String} value\n         * @param {String} field\n         */\n        filter: function (value, field) {\n            var source = this.initialOptions,\n                result;\n\n            field = field || this.filterBy.field;\n\n            result = _.filter(source, function (item) {\n                return Array.isArray(item[field]) && item[field].includes(value) ||\n                    item[field] === value ||\n                    item.value === '' ||\n                    item.value === 'unmapped';\n            });\n\n            this.setOptions(result);\n        }\n    });\n});\n","Vertex_Tax/js/model/flex-field-table.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'uiComponent',\n    'ko',\n    'uiLayout',\n    'Vertex_Tax/js/form/caption-formatter'\n], function (Component, ko, layout, captionFormatter) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            elementName: '', // Prefix to use for input elements\n            fieldType: '', // One of code, numeric, or date\n            tableId: '',\n            template: 'Vertex_Tax/flex-field-table',\n            defaultPlaceholder: 'No Data',\n            selectOptions: [\n                {\n                    label: 'No Data',\n                    value: 'none'\n                }\n            ]\n        },\n        retrieveFields: [],\n\n        /**\n         * Initializes the table\n         * @returns {FlexFieldTable} Chainable.\n         */\n        initialize: function () {\n            this._super();\n\n            this.retrieveFields = ko.observableArray();\n            this.initializeFields();\n\n            return this;\n        },\n\n        /**\n         * Initialize the select components and link them to the form values\n         */\n        initializeFields: function () {\n            var i, name, fieldId, fieldSource, toLayOut = [];\n\n            for (i in this.values) {\n                if (this.values.hasOwnProperty(i)) {\n                    fieldSource = this.values[i]['field_source'];\n                    fieldId = this.values[i]['field_id'];\n                    name = this.fieldType + 'FlexField' + fieldId;\n\n                    this.retrieveFields.push({\n                        fieldId: fieldId,\n                        fieldSource: fieldSource,\n                        fieldLabel: this.getFieldLabelFromSource(fieldSource),\n                        editMode: ko.observable(false),\n                        childName: name\n                    });\n                }\n            }\n\n            layout(toLayOut);\n        },\n\n        /**\n         * Replace the label value with a dropdown\n         * @param {Object} child\n         */\n        enableEditMode: function (child) {\n            child.editMode(true);\n\n            layout([{\n                component: 'Vertex_Tax/js/form/flex-field-select',\n                template: 'ui/grid/filters/elements/ui-select',\n                parent: this.name,\n                name: child.childName,\n                dataScope: '',\n                multiple: false,\n                selectType: 'optgroup',\n                selectedPlaceholders: {\n                    defaultPlaceholder: this.defaultPlaceholder\n                },\n                showOpenLevelsActionIcon: true,\n                presets: {\n                    optgroup: {\n                        showOpenLevelsActionIcon: true\n                    }\n                },\n                filterOptions: true,\n                isDisplayMissingValuePlaceholder: true,\n                options: this.selectOptions,\n                value: child.fieldSource\n            }]);\n        },\n\n        /**\n         * Retrieve the name for a Field ID input\n         *\n         * @param {String} fieldId\n         * @returns {String}\n         */\n        getFieldIdInputName: function (fieldId) {\n            return this.elementName + '[' + fieldId + '][field_id]';\n        },\n\n        /**\n         * Retrieve the label for the selected source\n         * @param {String} source\n         * @returns {String}\n         */\n        getFieldLabelFromSource: function (source) {\n            var i, j, selected;\n\n            for (i in this.selectOptions) {\n                if (this.selectOptions[i].optgroup === undefined) {\n                    continue;\n                }\n                for (j in this.selectOptions[i].optgroup) {\n                    selected = this.selectOptions[i].optgroup[j];\n\n                    if (selected.value === source) {\n                        return captionFormatter.getFormattedValue(selected);\n                    }\n                }\n            }\n            return this.defaultPlaceholder;\n        },\n\n        /**\n         * Retrieve the name for a Field Value input\n         * @param {String} fieldId\n         * @returns {String}\n         */\n        getFieldValueInputName: function (fieldId) {\n            return this.elementName + '[' + fieldId + '][field_source]';\n        },\n\n        /**\n         * Retrieve the name for the empty input\n         * @returns {String}\n         */\n        getEmptyName: function () {\n            return this.elementName + '[__empty]';\n        }\n    });\n});\n"}
}});
